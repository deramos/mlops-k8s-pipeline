name: Deploy Infra on PR Approval to Release Branch

on:
  pull_request:
    types: [closed]

jobs:
  deploy-infra:
    if: github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'release'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3

      - name: Set up Helm
        uses: azure/setup-helm@v3

      - name: Set KUBECONFIG
        run: |
          mkdir -p ~/.kube
          echo "${{ secrets.KUBECONFIG }}" > ~/.kube/config
          chmod 600 ~/.kube/config

      # --- TRAEFIK ---
      - name: Add Traefik Helm Repo
        run: |
          helm repo add traefik https://traefik.github.io/charts
          helm repo update

      - name: Install Traefik Ingress Controller (LoadBalancer)
        run: |
          helm upgrade --install traefik traefik/traefik \
            --namespace traefik \
            --create-namespace \
            --set service.type=LoadBalancer

      # --- POSTGRES ---

      - name: Install PostgresSQL via OCI
        run: |
          helm install postgres oci://registry-1.docker.io/bitnamicharts/postgresql \
          --version 12.9.0 \
          --namespace mlops --create-namespace \
          --set auth.username=${{ secrets.POSTGRES_USERNAME }} \
          --set auth.password=${{ secrets.POSTGRES_PASSWORD }} \
          --set auth.database=${{ secrets.POSTGRES_DBNAME }}

      - name: Install MinIO via OCI
        run: |
          helm install minio oci://registry-1.docker.io/bitnamicharts/minio \
            --version 5.1.7 \
            --namespace mlops \
            --set mode=standalone \
            --set rootUser=${{ secrets.MINIO_USERNAME }} \
            --set rootPassword=${{ secrets.MINIO_PASSWORD }} \
            --set persistence.enabled=false

      # --- EVIDENTLY AI ---

      - name: Install Evidently AI
        run: |
          helm repo add evidently https://evidentlyai.github.io/helm-charts
          helm install evidently evidently/evidently \
            --namespace mlops \
            --set postgresql.auth.username=${{ secrets.POSTGRES_USERNAME }} \
            --set postgresql.auth.password=${{ secrets.POSTGRES_PASSWORD }}

      # --- PROMETHEUS STACK ---

      - name: Install Prometheus Stack
        run: |
          helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
          helm install prometheus prometheus-community/kube-prometheus-stack \
            --namespace monitoring --create-namespace

      # --- FLAGER ---

      - name: Install Flagger
        run: |
          helm repo add flagger https://flagger.app
          helm install flagger flagger/flagger \
            --namespace istio-system \
            --set meshProvider=istio \
            --set metricsServer=http://prometheus:9090